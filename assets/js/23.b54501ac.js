(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{363:function(t,a,l){"use strict";l.r(a);var r=l(40),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"javascript"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),l("h2",{attrs:{id:"闭包"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),l("ul",[l("li",[t._v("概念：闭包指有权访问另一个函数作用域中变量的函数。\n"),l("ol",[l("li",[t._v("闭包是一个函数。")]),t._v(" "),l("li",[t._v("当一个函数访问（引用）另一个函数作用域中的变量时，那该函数就是闭包函数。")]),t._v(" "),l("li",[t._v("eg:函数fn内的fun函数访问fn中的变量时，fun就形成了闭包数数。")])])]),t._v(" "),l("li",[t._v("作用：延伸变量的作用范围。")])]),t._v(" "),l("h2",{attrs:{id:"原型-prototype"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#原型-prototype"}},[t._v("#")]),t._v(" 原型(prototype)")]),t._v(" "),l("ul",[l("li",[t._v("作用：用于共享方法。")]),t._v(" "),l("li",[t._v("每一个构造函数都有一个prototype属性，prototype属性内又有一个constructor属性指回该构造函数。")]),t._v(" "),l("li",[t._v("constructor用于记录该对象引用于哪个构造函数。")]),t._v(" "),l("li",[t._v("每个构造函数的实例对象都有一个__proto__属性，指向其构造函数的prototype属性。\n"),l("img",{attrs:{src:"%E5%8E%9F%E5%9E%8B%E9%93%BE.png",alt:"原型链"}})])]),t._v(" "),l("h2",{attrs:{id:"call、apply、bind"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind"}},[t._v("#")]),t._v(" call、apply、bind")]),t._v(" "),l("ul",[l("li",[t._v("相同点：都可以改变函数内部的this指向")]),t._v(" "),l("li",[t._v("不同点：\n"),l("ul",[l("li",[t._v("call和apply会调用函数，但传参不同。call传参参数arg1,arg2,...形式，apply必须以数组形式[args]传参")]),t._v(" "),l("li",[t._v("bind不会调用")])])]),t._v(" "),l("li",[t._v("常用应用场景：\n"),l("ul",[l("li",[t._v("call：在子函数继承父函数属性时。eg:function Son(){ Father().call(this,name,age)}")]),t._v(" "),l("li",[t._v("apply：跟数组有关的场景，如借助数组对象求最大值、最小值。eg:Math.max.apply(Math,[1,3,4])")]),t._v(" "),l("li",[t._v("bind：只想改变函数中this指向而不调用函数时。eg:setTimeout(function(){},100).bind(obj)")])])])]),t._v(" "),l("h2",{attrs:{id:"键盘事件"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件"}},[t._v("#")]),t._v(" 键盘事件")]),t._v(" "),l("ul",[l("li",[t._v("onkeydown和onkeyup不区分字母大小写，onkeypress区分字母大小写。")]),t._v(" "),l("li",[t._v("onkeydown和onkeyup能识别所有的键（包括功能键），onkeypress不能识别功能键。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);