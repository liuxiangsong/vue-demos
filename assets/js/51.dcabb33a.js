(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{391:function(e,o,t){"use strict";t.r(o);var r=t(40),s=Object(r.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" docker")]),e._v(" "),t("h2",{attrs:{id:"docker的基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker的基本操作"}},[e._v("#")]),e._v(" docker的基本操作")]),e._v(" "),t("h3",{attrs:{id:"docker的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker的安装"}},[e._v("#")]),e._v(" docker的安装")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("下载docker的依赖环境")]),e._v(" "),t("p",[t("code",[e._v("yum -y install yum-utils device-mapper-persistent-data lvm2")])])]),e._v(" "),t("li",[t("p",[e._v("设置下载docker的镜像源(阿里云)")]),e._v(" "),t("p",[t("code",[e._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo")])])]),e._v(" "),t("li",[t("p",[e._v("安装docker")]),e._v(" "),t("p",[t("code",[e._v("yum -y install docker-ce")])])]),e._v(" "),t("li",[t("p",[e._v("启动、测试")]),e._v(" "),t("ol",[t("li",[e._v("启动："),t("code",[e._v("systemctl start docker")])]),e._v(" "),t("li",[e._v("设置开机启动："),t("code",[e._v("systemctl enable docker")])]),e._v(" "),t("li",[e._v("测试："),t("code",[e._v("docker run hello-world")])])])])]),e._v(" "),t("h3",{attrs:{id:"docker的中央仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker的中央仓库"}},[e._v("#")]),e._v(" docker的中央仓库")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方仓库"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("国内的镜像网站：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://hub.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("daoCloud"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("网易蜂巢")])])])]),e._v(" "),t("h3",{attrs:{id:"镜像的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像的操作"}},[e._v("#")]),e._v(" 镜像的操作")]),e._v(" "),t("blockquote",[t("p",[e._v("镜像ID或容器ID可以只输入前几位字符，只要能够唯一区分即可，类似使用git分支ID。")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("拉取镜像到本地："),t("code",[e._v("docker pull 镜像名称[:tag]")])])]),e._v(" "),t("li",[t("p",[e._v("查看本地全部镜像："),t("code",[e._v("docker images")])])]),e._v(" "),t("li",[t("p",[e._v("删除本地镜像："),t("code",[e._v("docker rmi 镜像ID")])])]),e._v(" "),t("li",[t("p",[e._v("本地镜像的导入导出：")]),e._v(" "),t("ul",[t("li",[e._v("导出："),t("code",[e._v("docker save -o 导出的路径 镜像ID")])]),e._v(" "),t("li",[e._v("导入："),t("code",[e._v("docker load -i 镜像文件")])]),e._v(" "),t("li",[e._v("修改镜像名称："),t("code",[e._v("docker tag 镜像ID 新镜像名称:版本")])])])])]),e._v(" "),t("h3",{attrs:{id:"容器的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器的操作"}},[e._v("#")]),e._v(" 容器的操作")]),e._v(" "),t("blockquote",[t("p",[e._v("容器就是运行起来的镜像")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("运行容器")]),e._v(" "),t("ul",[t("li",[e._v("简单命令："),t("code",[e._v("docker run 镜像ID|镜像名称[:tag]")])]),e._v(" "),t("li",[t("strong",[e._v("常用命令")]),e._v("："),t("code",[e._v("docker run -d -p 宿主主机端口:容器端口 --name 容器名称 镜像ID|镜像名称[:tag]")]),e._v(" "),t("ul",[t("li",[e._v("-d：表示在后台运行容器")]),e._v(" "),t("li",[e._v("-p 宿主主机端口:容器端口：表示映射当前linux的端口和容器的端口")]),e._v(" "),t("li",[e._v("--name 容器名称：指定容器的名称")])])])])]),e._v(" "),t("li",[e._v("查看正在运行的容器："),t("code",[e._v("docker ps [-qa]")]),e._v(" "),t("ul",[t("li",[e._v("-a：查看全部的容器，包括没有运行的容器")]),e._v(" "),t("li",[e._v("-q：只查看容器的标识")])])]),e._v(" "),t("li",[e._v("查看容器的日志："),t("code",[e._v("docker logs -f 容器ID")]),e._v(" "),t("ul",[t("li",[e._v("-f：可以滚动查看日志的最后几行")])])]),e._v(" "),t("li",[e._v("进入到容器内部："),t("code",[e._v("docker exec -it 容器ID bash|sh")]),e._v(" "),t("ul",[t("li",[e._v("从容器内部退出：exit")])])]),e._v(" "),t("li",[e._v("删除容器（删除前，需要先停止容器运行）\n"),t("ul",[t("li",[e._v("停止指定容器："),t("code",[e._v("docker stop 容器ID")])]),e._v(" "),t("li",[e._v("停止所有容器："),t("code",[e._v("docker stop $(docker ps -qa)")])]),e._v(" "),t("li",[e._v("删除指定容器："),t("code",[e._v("docker rm 容器ID")])]),e._v(" "),t("li",[e._v("删除全部容器："),t("code",[e._v("docker rm $(docker ps -qa)")])])])]),e._v(" "),t("li",[e._v("启动容器："),t("code",[e._v("docker start 容器ID")])]),e._v(" "),t("li",[t("em",[e._v("将宿主主机的内容复制到时容器内部")]),e._v("："),t("code",[e._v("docker cp 文件名 容器ID:容器内部路径")])])]),e._v(" "),t("h3",{attrs:{id:"数据卷的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷的操作"}},[e._v("#")]),e._v(" 数据卷的操作")]),e._v(" "),t("blockquote",[t("p",[e._v("不建议去改变容器内部的内容，而应该使用数据卷")]),e._v(" "),t("p",[e._v("数据卷：将宿主主机的一个目录映射到时容器中的一个目录中；从而在宿主主机中操作目录内容，容器内部映射的文件也会跟着一起改变。")])]),e._v(" "),t("ul",[t("li",[e._v("创建数据卷："),t("code",[e._v("docker volume create 数据卷名称")]),e._v(" "),t("ul",[t("li",[e._v("创建数据卷后，内容默认会存放在目录 /var/lib/docker/volumes/数据卷名称/_data 中")])])]),e._v(" "),t("li",[e._v("查看数据卷的详细信息："),t("code",[e._v("docker volume inspect 数据卷名称")])]),e._v(" "),t("li",[e._v("查看全部数据卷："),t("code",[e._v("docker volume ls")])]),e._v(" "),t("li",[e._v("删除数据卷："),t("code",[e._v("docker volume rm 数据卷名称")])]),e._v(" "),t("li",[t("strong",[e._v("应用数据卷")]),e._v("(在运行容器命令内添加参数：)\n"),t("ul",[t("li",[t("code",[e._v("-v 数据卷名称:容器内部的路径")]),e._v(" "),t("ul",[t("li",[e._v("eg："),t("code",[e._v("docker run -d -p 宿主主机端口:容器端口 --name 容器名称 -v 数据卷名称:容器内部的路径 镜像ID")])]),e._v(" "),t("li",[e._v("当映射数据卷时，如果数据卷不存在时，docker会自动创建，并将容器内部自带的文件，存储到该数据卷目录下")])])]),e._v(" "),t("li",[t("code",[e._v("-v 路径:容器内部的路径")]),e._v(" "),t("ul",[t("li",[e._v("用该方式指定一个路径作为数据卷的存放位置，该路径下是空的，不会将容器内部文件带到该目录下（推荐使用）")])])])])])]),e._v(" "),t("h2",{attrs:{id:"docker自定义镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker自定义镜像"}},[e._v("#")]),e._v(" docker自定义镜像")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("创建一个Dockerfile文件，并在该文件内指定自定义镜像信息")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Dockerfile文件中常用的内容")]),e._v("\nfrom: "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#指定当前自定义镜像依赖的镜像")]),e._v("\ncopy: "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#将Dockerfile相对路径下的内容复制到自定义镜像中")]),e._v("\nworkdir: "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#声明镜像的默认工作目录")]),e._v("\ncmd: "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#需要执行的命令（在workdir下执行，cmd可写多个，但以最后一个为准)")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[e._v("通过docker命令制作镜像")]),e._v(" "),t("p",[t("code",[e._v("docker build -t 镜像名称:[tag] Dockerfile所在路径")])])])]),e._v(" "),t("h2",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[e._v("#")]),e._v(" docker-compose")]),e._v(" "),t("blockquote",[t("p",[e._v("通过docker-compose 可以批量管理容器，使用docker-compose.yml 文件维护docker相应命令，简化docker的使用")])]),e._v(" "),t("h3",{attrs:{id:"docker-compose安装和配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose安装和配置"}},[e._v("#")]),e._v(" docker-compose安装和配置")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("去github官网下载docker-compose二进制包，或通过wget将二进制包下载到linux系统中")]),e._v(" "),t("p",[e._v("下载地址：https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64")])]),e._v(" "),t("li",[t("p",[e._v("为了方便操作将该二进制包重命名为docker-compose，并移至/usr/local/bin目录下")]),e._v(" "),t("p",[t("code",[e._v("mv docker-compose-Linux-x86_64 /usr/local/bin/docker-compose")])])]),e._v(" "),t("li",[t("p",[e._v("将docker-compose文件权限修改为可执行："),t("code",[e._v("chmod 777 docker-compose")])])]),e._v(" "),t("li",[t("p",[e._v("创建软链或配置环境变量:")]),e._v(" "),t("ul",[t("li",[e._v("创建软链："),t("code",[e._v("sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose")])]),e._v(" "),t("li",[e._v("配置环境变量：\n"),t("ol",[t("li",[e._v("编辑/etc/profile："),t("code",[e._v("vi /etc/profile")])]),e._v(" "),t("li",[e._v("在文件最后添加："),t("code",[e._v("export PATH=$PATH:/usr/local/bin")])]),e._v(" "),t("li",[e._v("重新加载/etc/profile："),t("code",[e._v("source /etc/profile")])])])])])]),e._v(" "),t("li",[t("p",[e._v("在任意目录测试"),t("code",[e._v("docker-compose")]),e._v("命令是否正常")])])]),e._v(" "),t("h3",{attrs:{id:"docker-compose应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose应用"}},[e._v("#")]),e._v(" docker-compose应用")]),e._v(" "),t("blockquote",[t("p",[e._v("yml文件以key: value方式指定配置信息（key:后要加一个空格）")]),e._v(" "),t("p",[e._v("在docker-compose.yml文件中，不要使用制表符")])]),e._v(" "),t("h4",{attrs:{id:"docker-compose-yml文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml文件"}},[e._v("#")]),e._v(" docker-compose.yml文件")]),e._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'3.1'")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 可设置多个服务")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("nginx")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 服务的名称")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" myNginx                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置容器名称")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" always                          "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 表示docker启动时，容器跟着docker一起启动")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" daocloud.io/library/nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("1.13.2  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 指定镜像路径")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("                                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 端口映射，可设置多个")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token datetime number"}},[e._v("80:80")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("TZ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Asia/Shanghai     "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 指定时区")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置数据卷")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" /opt/docker_nginx/conf.d/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("/etc/nginx/conf.d\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" /opt/docker_nginx/websites/nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("/usr/share/nginx/html\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" /opt/docker_nginx/logs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("/var/log/nginx\n")])])]),t("h4",{attrs:{id:"使用docker-compose命令管理容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用docker-compose命令管理容器"}},[e._v("#")]),e._v(" 使用docker-compose命令管理容器")]),e._v(" "),t("blockquote",[t("p",[e._v("在使用docker-compose命令时，默认会在当前目录下查找docker-compose.yml文件")])]),e._v(" "),t("ul",[t("li",[e._v("基于docker-compose.yml启动管理的容器："),t("code",[e._v("docker-compose up -d")])]),e._v(" "),t("li",[e._v("关闭并删除容器："),t("code",[e._v("docker-compose down")])]),e._v(" "),t("li",[e._v("开启|关闭|重启 已存在的由docker-compose维护的容器："),t("code",[e._v("docker-compose start|stop|restart")])]),e._v(" "),t("li",[e._v("查看由docker-compose管理的容器："),t("code",[e._v("docker-compose ps")])]),e._v(" "),t("li",[e._v("查看日志："),t("code",[e._v("docker-compose logs -f")])])]),e._v(" "),t("h2",{attrs:{id:"lazydocker-可视化管理工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lazydocker-可视化管理工作"}},[e._v("#")]),e._v(" lazydocker(可视化管理工作)")]),e._v(" "),t("blockquote",[t("p",[e._v("lazydocker是一款针对docker和docker-compose的终端UI管理工具，支持键盘操作和鼠标点击")])]),e._v(" "),t("ol",[t("li",[e._v("下载"),t("a",{attrs:{href:"https://github.com/jesseduffield/lazydocker/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("lazydocker压缩包"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("解压压缩包后，直接运行"),t("code",[e._v("lazydocker")]),e._v("命令即可")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.bilibili.com/video/BV1sK4y1s7Cj?p=3",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考资料"),t("OutboundLink")],1)])])}),[],!1,null,null,null);o.default=s.exports}}]);